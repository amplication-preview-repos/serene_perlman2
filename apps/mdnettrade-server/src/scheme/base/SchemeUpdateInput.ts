/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsInt,
  Min,
  Max,
  IsOptional,
  IsEnum,
  IsNumber,
  ValidateNested,
  IsString,
  MaxLength,
} from "class-validator";

import { EnumSchemeDurationUnit } from "./EnumSchemeDurationUnit";
import { InvestmentUpdateManyWithoutSchemesInput } from "./InvestmentUpdateManyWithoutSchemesInput";
import { Type } from "class-transformer";

@InputType()
class SchemeUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  duration?: number | null;

  @ApiProperty({
    required: false,
    enum: EnumSchemeDurationUnit,
  })
  @IsEnum(EnumSchemeDurationUnit)
  @IsOptional()
  @Field(() => EnumSchemeDurationUnit, {
    nullable: true,
  })
  durationUnit?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  fixedReturnPrice?: number | null;

  @ApiProperty({
    required: false,
    type: () => InvestmentUpdateManyWithoutSchemesInput,
  })
  @ValidateNested()
  @Type(() => InvestmentUpdateManyWithoutSchemesInput)
  @IsOptional()
  @Field(() => InvestmentUpdateManyWithoutSchemesInput, {
    nullable: true,
  })
  investments?: InvestmentUpdateManyWithoutSchemesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  returnPercentage?: number | null;
}

export { SchemeUpdateInput as SchemeUpdateInput };
